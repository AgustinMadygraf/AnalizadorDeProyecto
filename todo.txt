1. **Mejorar archivo .BAT**
   - **Descripción:** [desarrollar Descripción]
   - **Pasos:**
     1. [desarrollar paso 1]
     2. [desarrollar paso 2]

2. **Incorporar .gitignore para Omitir Carpetas del Análisis de Estructura**
   - **Descripción:** Modificar la funcionalidad de análisis para omitir carpetas y archivos listados en `.gitignore`. Esto ayuda a evitar el análisis de archivos irrelevantes para las métricas del proyecto.
   - **Pasos:**
     1. Actualizar la función de recorrido de directorios para leer `.gitignore`.
     2. Excluir los archivos y carpetas especificados del análisis.
     3. Reflejar estas omisiones en el informe de análisis.

3. **Ordenar Archivos por Orden de Último Uso**
   - **Descripción:** Implementar una función para ordenar archivos o directorios por el tiempo de último acceso, facilitando la identificación de los elementos más recientes.
   - **Pasos:**
     1. Actualizar la función de listado de archivos para ordenar por tiempo de último acceso.
     2. Mostrar la lista ordenada al usuario.

4. **Incoroara tabla para mejorar la interfaz con el ususario**
   - **Descripción:** [desarrollar Descripción]
   - **Pasos:**
     1. [desarrollar paso 1]
     2. [desarrollar paso 2]

5. **Obtener las 5 funciones más largas**
   - **Descripción:** En cantidad de líneas de código[desarrollar Descripción]
   - **Pasos:**
     1. [desarrollar paso 1]
     2. [desarrollar paso 2]

6. **Conteo y Clasificación de Tipos de Archivos en el Proyecto**
   - **Descripción:** Implementar una función que cuente y clasifique los diferentes tipos de archivos presentes en el proyecto. Esto ayuda a entender la composición del proyecto en términos de tipos de archivos (por ejemplo, `.py`, `.md`, `.txt`).
   - **Pasos:**
     1. Recorrer los directorios del proyecto para identificar extensiones de archivos.
     2. Contar la cantidad de archivos por tipo.
     3. Presentar esta información en el informe de análisis del proyecto.

7. **Chequear y Actualizar el Repositorio desde GitHub**
   - **Descripción:** Añadir funcionalidad para verificar actualizaciones y obtener los últimos cambios desde el repositorio de GitHub.
   - **Pasos:**
     1. Obtener los últimos commits del repositorio remoto.
     2. Actualizar el repositorio local con los cambios nuevos.

8. **Incorporar Validación y Ejecución Condicional Basada en Versión GPT (gratuito o de pago)**
   - **Descripción:** Añadir una función para preguntar al usuario si están usando GPT gratuito o de pago para limitar el número máximo de archivos a analizar.
   - **Pasos:**
     1. Implementar un prompt para que el usuario especifique la versión de GPT.
     2. Ajustar el alcance del análisis de archivos basado en la entrada del usuario.

9. **CUando se presione Nueva ruta, dar la posibilidad de cancelar la opcion de nueva ruta y que el usuario pueda elegir una ruta preseleccionada**

10. **Incoporar la opcion de ademas de usar desde la consola, que sea desde una pagina web**

